import fs from 'fs/promises'
import path from 'path'
import type { GetStaticPaths, GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faArrowLeft } from '@fortawesome/pro-regular-svg-icons'
import Link from 'next/link'
import { readArticle } from '../../util/articles'
import type { Article } from '../../types/article'
import { isArticle } from '../../types/article'
import { PageLayout } from '../../layout/PageLayout'
import { Post } from '../../components/Post'

type PageProps = {
  article: Article | null
}

type PageParams = {
  slug: string
}

export const getStaticPaths: GetStaticPaths<PageParams> = async () => {
  const paths = await fs.readdir(path.resolve(process.cwd(), 'content', 'misc'))

  let filenames: { params: PageParams }[] = []

  for (const path of paths) {
    const name = path.split('.')[0]
    if (name) filenames = [...filenames, { params: { slug: name } }]
  }

  return {
    paths: filenames,
    fallback: true,
  }
}

export const getStaticProps: GetStaticProps<PageProps, PageParams> = async ({
  params,
}) => {
  const file = await readArticle({
    slug: params?.slug || '',
    category: 'misc',
    filename: `${params?.slug}.md`,
  })

  return {
    props: {
      article: file,
    },
  }
}

const MiscArticlePage: NextPage<PageProps> = ({ article }) => {
  return (
    <PageLayout className="pt-8">
      <Head>
        <title>
          {`${article?.metadata?.title || 'Not Found'} | Cameron Burrows`}
        </title>
        <meta name="description" content="Generated by create-t3-app" />
        {article && article.metadata && (
          <>
            <meta
              name="og:url"
              content={`http://cameronburrows.com.au/${article.slug}`}
            />
            <meta property="og:title" content={article.metadata.title} />
            <meta
              property="og:description"
              content={article.metadata.summary}
            />
            {/* <meta property="og:image" content={article.metadata.image} /> */}
          </>
        )}
        <meta name="description" content="Cameron Burrows website and blog" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <div className="container mx-auto px-4 lg:px-0">
        <Link href="/misc">
          <a className="group rounded-xl px-4 py-2 text-tertiary-2 hover:bg-accent">
            <FontAwesomeIcon
              icon={faArrowLeft}
              className="translate-x-1 pr-3 transition-transform group-hover:translate-x-0"
            />
            Back
          </a>
        </Link>
      </div>
      {article && isArticle(article) ? (
        <Post article={article} />
      ) : (
        <div>Not Found</div>
      )}
    </PageLayout>
  )
}

export default MiscArticlePage
